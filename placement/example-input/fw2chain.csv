# example chain template: User -> fw2 -> fw1 -> Web
# name
fw2-chain

# Components: name type stateful inputs in_back outputs out_back [cpu_coeff] [mem_coeff] [[outgoing_coeff]] [[outgoing_back]] opt:vnf_image
# type={source, normal, end}; values separated by tabs; coeff separated by comma - first fw_in, then bw_in, then +constant; outgoing for diff outputs separated by ;
vnf_user	source	True	0	0	1	0	[0]		[0]		[]		[]	'{"image":"placement-user-img", "network":"(id=output,ip=77.0.0.1/24)"}'
vnf_fw2		normal	False	1	0	1	0	[1,0]	[1,0]	[[1,0]]	[]	'{"image":"placement-fw2-img", "network":"(id=input,ip=77.0.0.2/24),(id=output,ip=88.0.0.1/24)"}'
vnf_fw1		normal	False	1	0	1	0	[1,0]	[1,0]	[[1,0]]	[]	'{"image":"placement-fw1-img", "network":"(id=input,ip=88.0.0.2/24),(id=output,ip=99.0.0.1/24)"}'
vnf_web		normal	False	1	0	0	0	[1,0]	[1,0]	[]		[]	'{"image":"placement-apache-img", "network":"(id=input,ip=99.0.0.2/24)"}'

# Arcs: direction src_name src_output dest_name dest_input max_delay
forward		vnf_user	0	vnf_fw2	0	50
forward		vnf_fw2	0	vnf_fw1	0	50
forward		vnf_fw1	0	vnf_web		0	50